<?php
 // This file is not called from WordPress. We don't like that.
! defined( 'ABSPATH' ) and exit;
/**
 **********************************************************************************************************
 * 												DO NOT EDIT THIS FILE
 **********************************************************************************************************
 * Theme functions
 *
 * @author		wpthms
 * @copyright	Copyright ( c ) wpthms
 * @link		http://wpthms.com
 * @since		Version 1.0
 * @package 	Yeah Includes
 */
/**
 * Viewport Meta
 */
add_action( 'wp_head', 'yt_theme_meta_viewport', 1 );  

add_filter( 'yt_get_current_layout', 'yt_default_sidebar_handler', 10 );
/**
 * Displaying sidebar based on different context
 */
function yt_default_sidebar_handler( $default ){

	$layout = 'layout';
	// if is page return default

	if( is_single() )
		$layout = 'single_layout';
	elseif( is_archive() )
		$layout = 'archive_layout';
	elseif( is_home() )
		$layout = 'blog_layout';

	if( ( $sidebar_choice = yt_get_options( $layout, 'default' ) ) ){
		return $sidebar_choice;
	}

	return $default;
}

/**
 * Menu icon class
 *
 * @since 1.0
 */
if ( ! function_exists( 'yt_site_nav_menu_description_icon' ) ) {
	function yt_site_nav_menu_description_icon ( $array = array(), $atts ) {
		
		/*$array['parent'] = !empty( $atts['description'] ) ? $atts['description'] : '';
		$array['children'] = !empty( $atts['description'] ) ? $atts['description'] : '';*/
		$array['before'] = !empty( $atts['description'] ) ? '<i class="' . esc_attr( $atts['description'] ) . '">' : '';
		$array['after'] = !empty( $atts['description'] ) ? '</i>' : '';
		
		
		return $array;
		
	}
}
add_filter( 'yt_walker_nav_menu_description', 'yt_site_nav_menu_description_icon', 10, 2 );

/**
 * Custom Menu item: Search
 *
 * @since 1.0
 */
if ( ! function_exists( 'yt_site_custom_menu_item' ) ) {
	function yt_site_custom_menu_item ( $items, $args ) {
		
		/*$items = '<li class="menu-item menu-item-type-custom menu-item-social-networks mega-menu-parent">
			<a href="#"><i class="fa fa-reorder"></i> Menu</a>
			<div class="mega-menu-content-wrapper full-width-wrapper">
				<div class="container">
					<ul class="sub-menu">
						<li id="menu-item-517" class="menu-item"><a href="http://192.168.1.15/framework/category/uncategorized/">Uncategorized</a></li>
						<li id="menu-item-518" class="menu-item"><a href="http://192.168.1.15/framework/category/audio/">Audio</a></li>
						<li id="menu-item-519" class="menu-item"><a href="http://192.168.1.15/framework/category/link/">Link</a></li>
						<li id="menu-item-520" class="menu-item"><a href="http://192.168.1.15/framework/category/link/video/">Video</a></li>
						<li id="menu-item-521" class="menu-item"><a href="http://192.168.1.15/framework/category/link/video/hello-x/">Hello</a></li>
						<li id="menu-item-522" class="menu-item"><a href="">Image</a></li>
					</ul>
				</div>
			</div>
		</li>';*/
		if( $args->theme_location == 'primary' ){

		  

			$data_settings = 'modal' == yt_get_options('site_search_type') ? ' data-action="open-modal" data-selector=".site-modal" data-role="search" data-remove-class="hidden" data-add-class="active" data-body-active="modal-active modal-search-active overflow-hidden"' : '';

	      	$items .= '<li class="menu-item menu-item-type-custom menu-item-gsearch default-dropdown sub-menu-left pull-right"' . $data_settings . '>
				<a href="javascript:void(0);"><i class="fa fa-search"></i></a>';
				if( 'default' == yt_get_options('site_search_type') ){
					$items .= '<ul class="sub-menu">
						<li class="menu-item">
							' . get_search_form( false ) . '
						</li>
					</ul>';
				}
			$items .= '</li>';

			if( 'main_menu' === yt_get_options( 'header_social_links_position' ) ):

				$items .= '<li class="menu-item-type-custom menu-item-social-networks">' . yt_site_social_networks() . '</li>';

			endif;
		}elseif( $args->theme_location == 'mobile' ){
			// $items = '<li class="menu-item-mobile-menu-logo">
			// 		<a href="' . esc_url( home_url( '/' ) ) . '" title="' . esc_attr( yt_get_options('plain_logo_text') ) . '" rel="home"><img src="'. esc_url( yt_get_options('logo') ) .'" alt="' . esc_attr( yt_get_options('plain_logo_text') ) . '">' . '</a>
			// 	</li>' . $items;

			
		}
   
   		return $items;
   	}
}
add_filter( 'wp_nav_menu_items', 'yt_site_custom_menu_item', 10, 2 );

/**
 * Ajax News Mega menu
 *
 * @since 1.0
 */
if ( ! function_exists( 'yt_site_ajax_mega_menu_by_category' ) ) {
	
	function yt_site_ajax_mega_menu_by_category( ){

		$nonce = isset( $_POST['nonce'] ) ? $_POST['nonce'] : '';
		$data_cat = isset( $_POST['data_cats'] ) ? $_POST['data_cats'] : '';
		$atts = isset( $_POST['atts'] ) ? $_POST['atts'] : '';
		if ( ! wp_verify_nonce( $nonce, THEMESLUG . '_mega_menu' ) )
			die();
		
		if( !$data_cat )
			die();

		$output = '';
		$category_list = explode(',', $data_cat);


		ob_start();

		include( locate_template('includes/templates/megamenu-ajax.php' ) );
		

		$html = ob_get_clean();

		
		$return = array(
			'success' => true,
			'html'	=> $html,
		);

		//
		wp_send_json( $return );

		//print_r(get_the_category(1));
		
		
		die(1);
    }
}
/**
 * Regular News Mega menu
 *
 * @since 1.0.3
 */
if ( ! function_exists( 'yt_site_usual_mega_menu_by_category' ) ) {
	
	function yt_site_usual_mega_menu_by_category( $output, $mega_menu, $data_cat, $depth, $atts  ){

		if( !$data_cat )
			return $output;

		if( $depth > 0 )
			return $output;

		if( empty( $mega_menu ) )
			return $output;

		if( 'news' !== $mega_menu )
			return $output;

		$output = '';

		$output .= '';

	ob_start();


		include( locate_template('includes/templates/megamenu-regular.php' ) );
				
		$content = ob_get_contents();
		
	ob_end_clean();

		$output .= $content;
		
		return $output;
    }
}

if( 'ajax' === yt_get_options( 'main_megamenu_request_type' ) ){ 
	add_action( 'yt_ajax_yt-site-mega-menu', 'yt_site_ajax_mega_menu_by_category' );
	add_action( 'yt_ajax_nopriv_yt-site-mega-menu', 'yt_site_ajax_mega_menu_by_category' );
}else{
	add_filter( 'yt_mega_menu_content', 'yt_site_usual_mega_menu_by_category', 10, 5 );
}

/**
 * Ajax News Sub
 *
 * @since 1.0
 */
if ( ! function_exists( 'yt_site_ajax_sub_mega_menu_by_category' ) ) {
	
	function yt_site_ajax_sub_mega_menu_by_category( ){

		$nonce = isset( $_POST['nonce'] ) ? $_POST['nonce'] : '';
		$data_cat = isset( $_POST['data_cat'] ) ? $_POST['data_cat'] : '';
		if ( ! wp_verify_nonce( $nonce, THEMESLUG . '_mega_menu' ) )
			die();
		
		if( !$data_cat )
			die();

		$output = '';

		global $post;

		$post_backup = $post;

		$myposts = get_posts( apply_filters( 'yt_site_ajax_sub_mega_menu_by_category_query', array( 
			'posts_per_page' => 5, 
			'cat' => $data_cat,
			) )
		);

		$count = 0;
		foreach ( $myposts as $post ) :
			setup_postdata( $post ); 

			$count++;

			$post_cat = get_category( $data_cat );
			$cat_tag_args = array();

			$cat_tag_args['cat_ID'] = $post_cat->cat_ID;
			$cat_tag_args['name'] = $post_cat->name;
			$cat_tag_args['slug'] = $post_cat->slug;
			?>
			<li data-filter="<?php echo esc_attr( $data_cat );?>" style="<?php /*echo 'animation-delay:' . ($count * .1) .'s;-webkit-animation-delay:' . ($count* .1) .'s;';*/?>" class="post-with-large-thumbnail <?php echo 5 == $count || 4 == $count ? 'hidden-md ' : ''; ?>col-md-3 col-lg-2">
				
					<?php if ( has_post_thumbnail() && get_the_post_thumbnail() && ! post_password_required() ) : ?>
					<div class="post-thumb large">
						<span class="cat-tag <?php echo esc_attr($cat_tag_args['slug'] );?>"><?php echo $cat_tag_args['name'];?></span>
						<a href="<?php the_permalink(); ?>" rel="bookmark" title="<?php echo esc_attr( get_the_title() ); ?>"><?php the_post_thumbnail('medium'); ?></a>
					</div>
					<?php endif;?>
					
					<time class="entry-date" datetime="<?php echo esc_attr( get_the_time('c') ); ?>"><?php the_date();?></time>
					
					<h3 class="secondary-2-primary no-margin-bottom"><a href="<?php the_permalink();?>" rel="bookmark"><?php the_title();?></a></h3>
					
				
			</li>

			<?php

		endforeach;
		//print_r(get_the_category(1));
		wp_reset_postdata();
		
		$post = $post_backup;
		
		die(1);
    }
}

/**
 * Ajax Mobile Menu
 *
 * @since 1.0
 */
if ( ! function_exists( 'yt_site_mobile_nav' ) ) {
	 
	function yt_site_mobile_nav(){
		
		//Navnav
		if ( has_nav_menu( 'mobile' ) ) {
			$mobile_menu = wp_nav_menu(
				apply_filters( 'yt_site_mobile_navigation_args', array( 
					'theme_location' => 'mobile' , 
					'echo' => false, 
					'container' => false,
					'menu_class'      => 'menu',
					'menu_id'			=> 'mobile-main-menu',
					// 'depth' => 2,
					'walker' => new YT_Walker_Nav_Menu()
				))
			);
		}else{
			$mobile_menu = '<ul class="menu"><li>' . sprintf( __('Create a Menu for small screen in <a href="%s">Menus</a> and assign it as Mobile Menu in <a href="%s">Theme Location</a>', 'wpthms'), admin_url('nav-menus.php'), admin_url('nav-menus.php?action=locations') ) . '</li></ul>';
		}
		
		$site_navigaton = $mobile_menu ;
		
		//Allow editing site
		$site_navigaton = yt_apply_atomic( 'site_mobile_menu', $site_navigaton );
		
		echo $site_navigaton;
	}
}
add_filter( 'yt_nav_menu_link_end', 'yt_menu_item_indicator', 10, 4 );
/*
 * Menu indicator
 *
 * @since 1.0
 */
function yt_menu_item_indicator( $content, $item, $depth, $args ){
	
	// if( 0 == $depth && in_array( 'menu-item-has-children', (array) $item->classes ) )
	// 	return '<i class="fa fa-angle-down menu-item-indicator"></i>';
	
	if( $depth > 0 && in_array( 'menu-item-has-children', (array) $item->classes ) )
		return '<i class="fa fa-caret-right menu-item-indicator"></i>';
	elseif( $depth == 0 && in_array( 'menu-item-has-children', (array) $item->classes ) )
		return '<i class="fa fa-caret-down menu-item-indicato.r"></i>';
	//yt_pretty_print($item);

	return $content;

}

/**
 * Mobile Menu
 */
if( !function_exists( 'yt_site_hidden_mobile_nav' ) ){
	function yt_site_hidden_mobile_nav( ){
		get_template_part( 'includes/templates/mobile-menu' );
	}
}
add_action( 'yt_wrapper_end', 'yt_site_hidden_mobile_nav' );
/**
 * Site social network
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_social_networks' ) ) {
	 
	function yt_site_social_networks( $return = true){
		
		$yt_data = yt_get_options();

		$network_array = apply_filters( 'yt_site_social_networks_args', array( 
			'facebook' => array(
				'title' => __('Facebook', 'wpthms'),
				'icon' => 'fa fa-facebook'
			), 
			'twitter' => array(
				'title' => __('Twitter', 'wpthms'),
				'icon' => 'fa fa-twitter'
			), 
			'googleplus' => array(
				'title' => __('Google+', 'wpthms'), 
				'icon' => 'fa fa-google-plus'
			),
			'youtube' => array(
				'title' => __('Youtube', 'wpthms'), 
				'icon' => 'fa fa-youtube'
			),
			'email' => array(
				'title' => __('Send an Email', 'wpthms'), 
				'icon' => 'fa fa-envelope'
			),
			'rss' => array(
				'title' => __('RSS Feed', 'wpthms'),
				'icon' => 'fa fa-rss'
			),
			'pinterest' => array(
				'title' => __('Pinterest', 'wpthms'),
				'icon' => 'fa fa-pinterest'
			),
			'vimeo' => array(
				'title' => __('Vimeo', 'wpthms'),
				'icon' => 'fa fa-vimeo-square'
			),
			'instagram' => array(
				'title' => __('Instagram', 'wpthms'),
				'icon' => 'fa fa-instagram'
			),
			'dribbble' => array(
				'title' => __('Dribbble', 'wpthms'),
				'icon' => 'fa fa-dribbble'
			)
		) );
		
		$social_networks ='';

		foreach( $network_array as $network	 => $settings ){

			if( !empty( $yt_data["scl_$network"] ) ){
				if( 'email' == $network ){
					$value = 'mailto:' . antispambot( $yt_data["scl_$network"] );
				}else{
					$value = esc_url( $yt_data["scl_$network"] );
				}
				$social_networks .= sprintf('<a href="%s" target="_blank" title="%s"><i class="%s"></i></a>',
					$value ,
					$settings['title'],
					esc_attr( $settings['icon'] )
				);
			}
		}

		if( $return  )
			return $social_networks;
		else
			echo $social_networks;
	}
}
/**
 * Hero banner class
 * @since v2.0.0
 */
class YT_Site_Hero_Banner{

	public static $option_key = 'featured_content_ids';

	public static function init(){
		add_action( 'pre_get_posts',                      array( __CLASS__, 'pre_get_posts'      )    );
		add_action( 'save_post',                          array( __CLASS__, 'delete_transient'   )    );

		
		if( defined( 'ICL_LANGUAGE_CODE' ) && isset( $GLOBALS['sitepress'] ) && ICL_LANGUAGE_CODE !== $GLOBALS['sitepress']->get_default_language() ) {
	
			self::$option_key .= '_' . ICL_LANGUAGE_CODE;
			
		}

		// echo self::$option_key;
	}
	/**
	 * Exclude featured posts from the home page blog query.
	 *
	 * Filter the home page posts, and remove any featured post ID's from it.
	 * Hooked onto the 'pre_get_posts' action, this changes the parameters of
	 * the query before it gets any posts.
	 *
	 * @static
	 * @access public
	 * @since 2.0.0
	 *
	 * @param WP_Query $query WP_Query object.
	 * @return WP_Query Possibly-modified WP_Query.
	 */
	public static function pre_get_posts( $query ) {
		
		// Bail if not home or not main query.
		if ( ! $query->is_home() || ! $query->is_main_query() ) {
			return;
		}

		if( !yt_get_options( 'herobanner_mode' ) )
			return;
		
		if( !yt_get_options( 'herobanner_excludeme_from_mainquery' ) )
			return;

		$page_on_front = get_option( 'page_on_front' );

		// Bail if the blog page is not the front page.
		// if ( ! empty( $page_on_front ) ) {
		// 	return;
		// }

		$featured = self::get_hero_ids();

		// Bail if no featured posts.
		if ( ! $featured ) {
			return;
		}
		// We need to respect post ids already in the blacklist.
		$post__not_in = $query->get( 'post__not_in' );

		if ( ! empty( $post__not_in ) ) {
			$featured = array_merge( (array) $post__not_in, $featured );
			$featured = array_unique( $featured );
		}

		$query->set( 'post__not_in', $featured );
	}
	/**
	 * Get featured post IDs
	 *
	 * This function will return the an array containing the
	 * post IDs of all featured posts.
	 *
	 * Sets the "featured_content_ids" transient.
	 *
	 * @static
	 * @access public
	 * @since 2.0.0
	 *
	 * @return array Array of post IDs.
	 */
	public static function get_hero_ids(){

		$featured_ids = get_transient( self::$option_key );

		if ( ! empty( $featured_ids ) ) {
			return array_map( 'absint', (array) $featured_ids );
		}

		global $post;

		/*Backup global post*/
		$backup_post = $post;

		// Options data
		$data = yt_get_options();

		// Posts per page
		$posts_per_page = 5;

		if( 'symmetry_brick' == $data['herobanner_layout'] )
			$posts_per_page = 6;
		elseif( 'triple' == $data['herobanner_layout'] )
			$posts_per_page = 3;
		elseif( 'carousel' == $data['herobanner_layout'] )
			$posts_per_page = $data['herobanner_postsperpage'];

		/*Begin query*/ 
		$query_args = array(
			'fields'           => 'ids',
			'order' 			=> !empty($data['herobanner_order']) ? $data['herobanner_order'] : 'DESC',
			'orderby' 			=> !empty($data['herobanner_orderby']) ? $data['herobanner_orderby'] : 'date',
			'numberposts' 		=> intval( $posts_per_page ),
			'post_type' 		=> 'post',
			'post_status' 		=> 'publish',
			'ignore_sticky_posts' => 1,

			'suppress_filters' => false 
		);


		// Cat
		if( !empty( $data['herobanner_cat'] ) ){
			$query_args['cat'] = is_array( $data['herobanner_cat'] ) ? join( ',', $data['herobanner_cat'] ) :  $data['herobanner_cat'];
		}

		// Tag
		if( !empty( $data['herobanner_tagin'] ) ){
			$temp_tag = !is_array( $data['herobanner_tagin'] ) ? explode(',', $data['herobanner_tagin'] ) : $data['herobanner_tagin'];

			if( !empty( $temp_tag ) )
				$query_args['tag__in'] = $temp_tag;
			
		}
		// Exclude cat
		if( !empty( $data['herobanner_catnotin'] ) ){
			$temp_cat = !is_array( $data['herobanner_catnotin'] ) ? explode(',', $data['herobanner_catnotin'] ) : $data['herobanner_catnotin'];

			if( !empty( $temp_cat ) )
				$query_args['category__not_in'] = $temp_cat;
			
		}
		// Exclude tag
		if( !empty( $data['herobanner_tagnotin'] ) ){
			$temp_tag = !is_array( $data['herobanner_tagnotin'] ) ? explode(',', $data['herobanner_tagnotin'] ) : $data['herobanner_tagnotin'];

			if( !empty( $temp_tag ) )
				$query_args['tag__not_in'] = $temp_tag;
			
		}


		/* Push Specified post to query*/
		if( !empty( $data['herobanner_excludeformat'] ) && is_array( $data['herobanner_excludeformat'] ) ){
			$exclude_format_temp = array();
			foreach( $data['herobanner_excludeformat'] as $format ){
				$exclude_format_temp[] = "post-format-$format";
			}

			$query_args['tax_query'] = array(
			    array(
			      'taxonomy' 	=> 'post_format',
			      'field' 		=> 'slug',
			      'terms' 		=> $exclude_format_temp,
			      'operator' 	=> 'NOT IN'
			    )
			);
		}
		/*Allow ordering posts by post views*/ 
		if( 'meta_value_num' == $data['herobanner_orderby'] ){
			$query_args['meta_key'] = apply_filters( 'yt_simple_post_views_tracker_meta_key', '_post_views' );
			$query_args['meta_value_num'] = '0';
			$query_args['meta_compare'] = '>';
		}

		// Query for featured posts.
		$featured_ids = get_posts( apply_filters( 'yt_get_hero_ids_query' ,$query_args ) );

		$post = $backup_post;

		// Return array with sticky posts if no Featured Content exists.
		if ( ! $featured_ids ) {
			return array_slice( get_option( 'sticky_posts', array() ), 0, $posts_per_page );
		}

		// Ensure correct format before save/return.
		$featured_ids = array_map( 'absint', $featured_ids );

		set_transient( self::$option_key, $featured_ids );

		return $featured_ids;
	}
	/**
	 * Get hero posts.
	 *
	 * @static
	 * @access public
	 * @since 2.0.0
	 *
	 * @return array Array of featured posts.
	 */
	public static function get_hero_posts() {
		$post_ids = self::get_hero_ids();

		// No need to query if there is are no featured posts.
		if ( empty( $post_ids ) ) {
			return array();
		}

		$featured_posts = get_posts( apply_filters( 'yt_get_hero_posts_query', array(
			'include'        => $post_ids,
			'posts_per_page' => count( $post_ids ),
		) ) );

		return $featured_posts;
	}
	/**
	 * Delete featured content ids transient.
	 *
	 * Hooks in the "save_post" action.
	 *
	 * @see Featured_Content::validate_settings().
	 *
	 * @static
	 * @access public
	 * @since 1.0
	 */
	public static function delete_transient() {
		delete_transient( self::$option_key );
	}
}

// Kickstart the Hero Banner
YT_Site_Hero_Banner::init();

// Flush the hero posts cache
add_filter( 'yt_refresh_transient_list_after_updating_theme_options', create_function( '$list', '$list[] = "featured_content_ids"; return $list;') );
/**
 * Site Hero bricks
 */
if ( ! function_exists( 'yt_site_featured_news' ) ) {
	
	function yt_site_featured_news( $output_data = 'html' ){

		if( !is_home() && !is_front_page() )
			return;

		$paged = (get_query_var('paged')) ? get_query_var('paged') : 1;
		
		/*Allow filtering to show site hero on paged page for post*/
		if( is_paged() && !apply_filters( 'yt_site_hero_banner_allow_on_paged', false ) ){
			return;
		}

		$hero_banner = yt_get_options('herobanner_mode');

		if( !$hero_banner )
			return;

		get_template_part( 'includes/templates/hero-content' );
	}
}
add_action( 'yt_main_start','yt_site_featured_news', 1);

/*---------------------------------------------------------------------------------------------------------*
 * Primary content
 *---------------------------------------------------------------------------------------------------------*/



add_filter('wp_list_categories', 'yt_site_cat_count_span');

function yt_site_cat_count_span($links) {
	$links = str_replace( 
		array( '</a> (', ')' . "\n" .'</li>' ), 
		array( '</a> <span>(', ')</span></li>' ),
		$links
	);
	return $links;
}

/**
 * After single post content
 *
 * -Author since 1.0.1
 * -Post nav
 * -5 related article
 * -You Might Also Like
 * -Comment
 */

/**
 * Post nav
 *
 * @since 1.0
 */

function yt_site_single_post_author(){
	if( !is_single()  )
		return;

	if( 'hide' == yt_get_options( 'blog_single_post_author_meta') )
		return;

	get_template_part( 'includes/templates/single-author-meta' );
	
}
add_action( 'yt_after_loop_singular_post','yt_site_single_post_author', 5);


if ( ! function_exists( 'yt_site_single_post_dir_nav' ) ) {
	function yt_site_single_post_dir_nav(){
		yt_direction_nav( 'nav-below' );
	}
}
add_action( 'yt_after_loop_singular_post','yt_site_single_post_dir_nav', 10);
/**
 * Single post
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_single_post_related_articles' ) ) {
	 
	function yt_site_single_post_related_articles(){

		if( !is_single() )
			return;

		if( 'hide' == yt_get_options( 'blog_single_post_related_articles') )
			return;




		get_template_part( 'includes/templates/single-related-articles' );
	}
}
add_action( 'yt_after_loop_singular_post','yt_site_single_post_related_articles', 10);

/**
 * Single post
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_single_post_you_might_also_like' ) ) {
	 
	function yt_site_single_post_you_might_also_like(){


		if( 'hide' == yt_get_options( 'blog_single_post_youmightalsolike') )
		    return;

		get_template_part( 'includes/templates/single-ymal' );
		
	}
}
add_action( 'yt_after_loop_singular_post','yt_site_single_post_you_might_also_like', 20);

/**
 * Post comment
 *
 * @since 1.0
 */	

if ( ! function_exists( 'yt_site_single_post_comment' ) ) {
	 
	function yt_site_single_post_comment(){
		// If comments are open or we have at least one comment, load up the comment template
		if ( 'show' == yt_get_options( 'blog_single_post_comment_template' ) && ( comments_open() || '0' != get_comments_number() ) )
			comments_template();
	}
}
add_action( 'yt_after_loop_singular_post','yt_site_single_post_comment', 20);
/*---------------------------------------------------------------------------------------------------------*
 * Theme Footer
 *---------------------------------------------------------------------------------------------------------*/
if ( ! function_exists( 'yt_site_footer' ) ) {
	 
	function yt_site_footer(){

		$footer_layout = yt_get_options('footer_layout');

		if( 'footer-extra' !== $footer_layout && apply_filters( 'yt_site_footer_widgets', true  ) ):
			
			get_template_part( 'includes/templates/footer-widgets' );
		endif;

		if( 'footer-widget' !== $footer_layout && ( yt_get_options('footer_text_left') || yt_get_options('footer_text_right'))  && apply_filters( 'yt_site_footer_info', true  ) ):


			get_template_part( 'includes/templates/footer-info' );
		endif;
	}
}


/*---------------------------------------------------------------------------------------------------------*
 * Theme ads
 *---------------------------------------------------------------------------------------------------------*/

/**
 * Head Ads
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_head_ads' ) ) {
	
	function yt_site_head_ads(){
		
		
		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}
		
		if( yt_get_options( 'site_ads_after_header' ) ):
			$output = sprintf('<div class="site-head-ads clearfix border-bottom">
				<div class="container site-head-ads text-center padding-top-30 padding-bottom-30 clearfix">
				%s
				</div>
			</div>', yt_get_options( 'site_ads_after_header' ));

			echo do_shortcode( apply_filters( 'yt_site_head_ads', $output, $post_id ) );
		endif;
	}
}
add_action( 'yt_after_header','yt_site_head_ads', 20);

/**
 * Foot Ads
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_foot_ads' ) ) {
	
	function yt_site_foot_ads(){

		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}

		if( yt_get_options( 'site_ads_before_footer' ) ):
			$output = sprintf('<div class="site-head-ads clearfix border-top">
				<div class="container site-head-ads text-center padding-top-30 padding-bottom-30 clearfix">
				%s
				</div>
			</div>', yt_get_options( 'site_ads_before_footer' ) );
			echo do_shortcode( apply_filters( 'yt_site_foot_ads', $output, $post_id ) );
		endif;
	}
}
add_action( 'yt_footer_start','yt_site_foot_ads', 20);

/**
 * Single post ads
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_ads_between_rlpaymasl_single_post' ) ) {
	function yt_site_ads_between_rlpaymasl_single_post(){

		$condition = is_singular( 'post' );
		if( !apply_filters( 'yt_site_ads_between_rlpaymasl_single_post_condition', $condition ) )
			return;

		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}

		if( yt_get_options( 'site_ads_between_rlpaymasl_single_post' ) ):
			$output = '<div class="entry-stuff clear margin-bottom-30 hidden-print text-center">';
			$output .= stripslashes( yt_get_options( 'site_ads_between_rlpaymasl_single_post' ) );
			$output .= '</div>';
			echo do_shortcode( apply_filters( 'yt_site_ads_between_rlpaymasl_single_post', $output, $post_id ) );
		endif;
		
	}
}
add_action( 'yt_after_loop_singular_post','yt_site_ads_between_rlpaymasl_single_post', 11);

 
/*---------------------------------------------------------------------------------------------------------*
 * Theme sections's classes
 * 
 * Adding classes for Sections
 *---------------------------------------------------------------------------------------------------------*/
add_filter( 'post_class', 'yt_post_classes' );
/**
 * Adds custom classes to the array of post classes.
 *
 * @param array $classes Classes for the post element.
 * @return array
 */
function yt_post_classes($classes){
	
	if ( in_the_loop() ) {
		$classes[] = 'main-hentry';
		// Detect ajax post
		if( defined( 'DOING_AJAX' ) ) 
			$classes[] = 'ajax-post';
	}

	return $classes;
}

add_filter( 'yt_section_class', 'yt_site_section_class', 10, 2 );

/*
 * Primary Class
 *
 * @since 2.0
 */
function yt_site_section_class( $classes, $position ){
	$theme_layouts = array(
		'default', 
		'right-sidebar',
		'left-sidebar',
		'fullwidth',
		'double-sidebars'
	);

	$default_layout = $layout = yt_get_options( 'layout' );
	
	if( is_archive() ){
		$layout = yt_get_options( 'archive_layout' );
	}elseif( is_home() ){
		$layout = yt_get_options( 'blog_layout' );
	}elseif( is_single() ){
		$layout = yt_get_options( 'single_layout' );
	}
	if( !trim( $layout) ){
		$layout = $default_layout;
	}
	
	$current_layout = yt_get_current_layout( $layout );

	// Default Layout
	if( 'default' == $current_layout ){
		// Main content
		if( 'primary' == $position ){
			$classes[] = 'col-sm-12';
			
			$classes[] = 'col-md-7';
			$classes[] = 'col-md-push-2';
			
			$classes[] = 'col-lg-7';
			$classes[] = 'col-lg-push-2';

			$classes[] = 'boundary-column';
		// Main Sidebar
		}elseif( 'secondary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_main_sidebar' ) ){
				$classes[] = 'hidden-xs';
				$classes[] = 'hidden-sm';
			}else{
				$classes[] = 'col-sm-6';
			}

			$classes[] = 'col-md-3';
			$classes[] = 'col-md-push-2';
			
			$classes[] = 'col-lg-3';
			$classes[] = 'col-lg-push-2';
		// Sub Sidebar
		}elseif( 'tertiary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_sub_sidebar' ) ){
				$classes[] = 'hidden-xs';
				$classes[] = 'hidden-sm';
			}else{
				$classes[] = 'col-sm-6';
			}
			$classes[] = 'col-md-2';
			$classes[] = 'col-md-pull-10';
			
			$classes[] = 'col-lg-2';
			$classes[] = 'col-lg-pull-10';
		}
	// Double sidebars or the right
	}elseif( 'double-sidebars' == $current_layout ){
		// Main content
		if( 'primary' == $position ){
			$classes[] = 'col-sm-12';
			$classes[] = 'col-md-6';
		// Main Sidebar
		}elseif( 'secondary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_main_sidebar' ) ){
				$classes[] = 'hidden-xs';
				$classes[] = 'hidden-sm';
			}else{
				$classes[] = 'col-sm-6';
			}
			
			$classes[] = 'col-md-3';
			$classes[] = 'col-md-push-3';
			
			$classes[] = 'col-lg-3';
			$classes[] = 'col-lg-push-3';
		// Sub Sidebar
		}elseif( 'tertiary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_sub_sidebar' ) ){
				$classes[] = 'hidden-xs';
				$classes[] = 'hidden-sm';
			}else{
				$classes[] = 'col-sm-6';
			}
			
			$classes[] = 'col-md-3';	
			$classes[] = 'col-md-pull-3';
			
			$classes[] = 'col-lg-3';
			$classes[] = 'col-lg-pull-3';
			$classes[] = 'boundary-column';
		}
	}elseif( 'right-sidebar' == $current_layout ){
		// Main content
		if( 'primary' == $position ){
			$classes[] = 'col-sm-12';
			$classes[] = 'col-md-8';
		// Main Sidebar
		}elseif( 'secondary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_main_sidebar' ) ){
				$classes[] = 'hidden-xs';

				$classes[] = 'col-sm-12';
				$classes[] = 'hidden-sm';
			}else{

				$classes[] = 'col-sm-12';
			}
			
			$classes[] = 'col-md-4';
			$classes[] = 'boundary-column';
		}
	}elseif( 'left-sidebar' == $current_layout ){
		// Main content
		if( 'primary' == $position ){
			$classes[] = 'col-sm-12';
			$classes[] = 'col-md-8';
			$classes[] = 'col-md-push-4';
		// Main Sidebar
		}elseif( 'secondary' == $position ){
			if( 'hide' == yt_get_options( 'site_page_main_sidebar' ) ){
				$classes[] = 'hidden-xs';

				$classes[] = 'col-sm-12';
				$classes[] = 'hidden-sm';
			}else{
				$classes[] = 'col-sm-12';
			}

			$classes[] = 'col-md-4';
			$classes[] = 'col-md-pull-8';
			$classes[] = 'boundary-column';
		}

	}elseif( 'fullwidth' == $current_layout ){
		// Main content
		if( 'primary' == $position ){
			$classes[] = 'col-sm-12';
		}
	}

	return apply_filters( 'yt_site_section_class', $classes, $position, $current_layout );
}


/*
 * Overwrite Impressive like Plugin settings
 *
 * @since 1.0
 * @framework 1.0
 */

add_filter( 'yt_impressive_like_symbol', 'yt_site_impressive_like_symbol');

if( !function_exists( 'yt_site_impressive_like_symbol') ) {
	
	function yt_site_impressive_like_symbol(){
		return '<i class="fa fa-heart"></i>';
	}
}

add_filter( 'yt_icon_next_post', 'yt_site_icon_next_post');

if( !function_exists( 'yt_site_icon_next_post') ) {
	
	function yt_site_icon_next_post(){
		return '<span class="pager-icon"><i class="fa fa-chevron-right"></i></span>';
	}
}

add_filter( 'yt_icon_prev_post', 'yt_site_icon_prev_post');

if( !function_exists( 'yt_site_icon_prev_post') ) {
	
	function yt_site_icon_prev_post(){
		return '<span class="pager-icon"><i class="fa fa-chevron-left"></i></span>';
	}
}

//add_filter( 'widget_title', 'yt_widget_title_icon', 10,3 );
/**
 * Icon for widget title
 *
 * @since 1.0.4
 */

function yt_widget_title_icon( $title, $instance, $id_base ) {
    if( 'search' == $id_base)
    	return '<i class="fa fa-search"></i> ' . $title;

	return $title;
}

/**
 * Single post ads
 *
 * @since 1.0.4
 */

if ( ! function_exists( 'yt_site_ads_before_single_post' ) ) {
	function yt_site_ads_before_single_post( $content){



		$condition = is_singular( 'post' );
		if( !apply_filters( 'yt_site_ads_before_single_post_condition', $condition ) )
			return $content;

		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}

		$ads = yt_get_options( 'site_ads_before_single_post' );
		if( empty( $ads ))
			return $content;

		$ads = '<div class="entry-stuff margin-bottom-15 hidden-print single-post-ads-top pull-right-sm pull-right-md pull-right-lg margin-left-15 text-center-xs">' . stripslashes( $ads ) . '</div>';
		$ads = do_shortcode( apply_filters( 'yt_site_ads_before_single_post', $ads, $post_id ) );

		$delimeter = '</p>';
		$linebreaks = substr_count( $content, $delimeter );
		
		if( $linebreaks < apply_filters( 'yt_site_ads_before_single_post_paragraph_count', 1 ) )
			return $content;

		$insert_after = 1;

		$paragraphs = explode( $delimeter, $content );

		foreach ($paragraphs as $key => $paragraph) {
			if ( trim( $paragraph ) ) {
				$paragraphs[$key] .= $delimeter;
			}
			if ( $insert_after == $key + 1 ) {
	            $paragraphs[$key] .= $ads;
	        }
		}		

		return implode( '', $paragraphs );
		
	}
}
/**
 * Single post ads
 *
 * @since 1.0.4
 */
if ( ! function_exists( 'yt_site_ads_between_single_post' ) ) {
	function yt_site_ads_between_single_post( $content ){

		$condition = is_singular( 'post' );
		if( !apply_filters( 'yt_site_ads_between_single_post_condition', $condition ) )
			return $content;

		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}

		$ads = yt_get_options( 'site_ads_between_single_post' );
		if( empty( $ads ))
			return $content;

		$ads = '<div class="entry-stuff clear margin-bottom-15 hidden-print single-post-ads-between center-block text-center">' . stripslashes( $ads ) . '</div>';
		$ads = do_shortcode( apply_filters( 'yt_site_ads_between_single_post', $ads, $post_id ) );

		$delimeter = '</p>';
		$linebreaks = substr_count( $content, $delimeter );
		
		if( $linebreaks < apply_filters( 'yt_site_ads_between_single_post_paragraph_count', 4 ) )
			return $content;

		$insert_after = intval( $linebreaks/2 ) + 1;

		$paragraphs = explode( $delimeter, $content );

		foreach ($paragraphs as $key => $paragraph) {
			if ( trim( $paragraph ) ) {
				$paragraphs[$key] .= $delimeter;
			}
			if ( $insert_after == $key + 1 ) {
	            $paragraphs[$key] .= $ads;
	        }
		}		

		return implode( '', $paragraphs );
	}
}
add_filter( 'the_content', 'yt_site_ads_between_single_post', 10, 1 );
/**
 * Single post ads
 *
 * @since 1.0
 */

if ( ! function_exists( 'yt_site_ads_after_single_post' ) ) {
	function yt_site_ads_after_single_post( $content ){

		$condition = is_singular( 'post' );
		if( !apply_filters( 'yt_site_ads_before_single_post_condition', $condition ) )
			return $content;

		if( !empty( $GLOBALS['post'] )){
			$post = $GLOBALS['post'];
			$post_id = $post->ID;
		}else{
			$post_id = 0;
		}

		$ads = yt_get_options( 'site_ads_after_single_post' );
		$output = '';
		if( $ads ):
			$output = '<div class="entry-stuff clear margin-bottom-15 hidden-print single-post-ads-bottom text-center">';
			$output .= stripslashes( $ads );
			$output .= '</div>';
			$output = do_shortcode( apply_filters( 'yt_site_ads_after_single_post', $output, $post_id ) );
		endif;

		return $content . $output;
		

	}
}
add_filter( 'the_content', 'yt_site_ads_before_single_post', 15, 1 );
add_filter( 'the_content', 'yt_site_ads_after_single_post', 20 );

/**
 * Modal search
 * @since 1.0.4
 */
if( !function_exists( 'yt_site_modal_search_box' )){
	function yt_site_modal_search_box(){

		if( 'modal' != yt_get_options('site_search_type') )
			return;

		get_template_part( 'includes/templates/modal-search' );
	}
}
add_action( 'yt_wrapper_end', 'yt_site_modal_search_box' );
/*
 * Top category link for entry 
 * @since 1.0.4
 */
if(!function_exists( 'yt_site_post_entry_category' )){
	function yt_site_post_entry_category(){

		$meta_info = yt_get_options('blog_post_meta_info');

		if( !in_array( 'category',$meta_info ) ) 
			return;
		
		//Category
		$categories = get_the_category();
		$categories_output = array();
		
		if($categories){
			foreach($categories as $category) {
				$categories_output[] = '<a class="'.esc_attr( $category->slug ).'" href="'. esc_url( get_category_link( $category->term_id ) ) . '" title="' . esc_attr( sprintf( __( 'View all posts in %s', 'wpthms' ), esc_attr( $category->name ) ) ) . '">' . esc_html( $category->cat_name ) . '</a>';
			}
		}
		echo '<strong class="text-uppercase margin-bottom-15 display-block category-meta">' . join( ', ', $categories_output ) . '</strong>';
	}
}
/*
 * Style 2 of post meta description
 * @since 1.0.4
 */
if( !function_exists('yt_site_impressive_post_meta_description')){
	function yt_site_impressive_post_meta_description(){

		global $post;

		if ( isset($post->post_type ) && 'post' !== $post->post_type ){
			return;
		}
		get_template_part( 'includes/templates/post-meta-desc-alt' );
		
	}
}

if( function_exists( 'wp_review_inject_data' ))
	remove_filter( 'the_content', 'wp_review_inject_data' );

if( function_exists( 'wp_review_inject_data' ))
	add_filter( 'the_content', 'wp_review_inject_data', 12 );